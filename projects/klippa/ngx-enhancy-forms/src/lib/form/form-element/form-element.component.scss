@import '../../../style/themes/default/variables';
:host {
	display: block;
}
.componentContainer {
	display: flex;
	align-items: center;
	min-height: 42px;
	&:not(.hasCaption) {
		display: block;
		.inputContainer {
			margin-top: 0;
		}
	}
	&.reverseOrder {
		flex-direction: row-reverse;
		justify-content: flex-end;
	}
	&.vertical {
		display: block;
		.inputContainer {
			margin-top: $spacing-tiny;
		}
		.errorContainer {
			margin-left: 0;
		}
		.caption {
			padding-right: 0;
		}
	}
}
.captionRefContainer {
	display: flex;
}
.caption {
	font-weight: bold;
	flex: 0 0 auto;
	padding-right: $spacing-medium;
	&.percentageSpacing {
		flex: 40;
		&.d30-70 {
			flex: 30;
		}
		&.d34-66 {
			flex: 34;
		}
	}
	&.fixedInputWidth {
		flex: 1 1 0px;
		overflow: hidden;
	}
	color: $default-dark;
	&.hasErrors {
		color: $default-warning;
		&.withErrorRightOfCaption .rightOfCaptionError {
			display: block;
		}
	}
	&.withErrorRightOfCaption {
		display: flex;
		justify-content: space-between;
		gap: $spacing-normal;
		.captionText {
			flex: 1 2 auto;
			white-space: nowrap;
			overflow: hidden;
			text-overflow: ellipsis;
		}
		.rightOfCaptionError {
			display: none;
			font-weight: normal;
			overflow: hidden;
			flex: 1 1 auto;
			text-align: right;
			::ng-deep * {
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;
			}
		}
	}
}
$triangleSize: 8px;
.inputContainer {
	position: relative;
	flex: 1;
	.errorTooltipTriangle {
		z-index: 1;
		position: absolute;
		//display: none;
		right: 0px;
		transform: translate(-0.15rem, calc(-100% - 0.1rem)) scaleX(0.8);
		width: 0px;
		height: 0px;
		border-left: $triangleSize solid transparent;
		border-right: $triangleSize solid transparent;
		border-top: $triangleSize solid rgba(0, 0, 0, 0.13);
	}
	.errorTooltipTriangleWhite {
		z-index: 3;
		position: absolute;
		//display: none;
		right: 0px;
		transform: translate(-0.15rem, calc(-100% - 0.1rem - 2px)) scaleX(0.8);
		width: 0px;
		height: 0px;
		border-left: $triangleSize solid transparent;
		border-right: $triangleSize solid transparent;
		border-top: $triangleSize solid white;
	}
	.errorTooltip {
		position: absolute;
		top: -0.6rem;
		right: 0;
		display: none;

		z-index: 2;
		color: rgb(81, 83, 101);
		transform: translateY(-100%);
		max-width: 20rem;
		white-space: break-spaces;
		background-color: white;
		border: 1px solid rgba(0, 0, 0, 0.13);
		box-shadow: rgba(0, 0, 0, 0.13) 2px 3px 10px 0px;
		padding: 0.3rem 0.5rem;
		box-sizing: border-box;
		border-radius: 3px;
		.errorContainer {
			margin-left: initial;
		}
	}
	&:hover {
		.errorTooltip, .errorTooltipTriangle, .errorTooltipTriangleWhite {
			display: block;
		}
	}
	&.percentageSpacing {
		flex: 60;
		&.d30-70 {
			flex: 70;
		}
		&.d34-66 {
			flex: 66;
		}
	}
	&.fixedInputWidth {
		flex: 0 0 auto;
	}
}

.errorContainer {
	color: $default-warning;
	&.hasCaption {
		margin-left: calc(40% + $spacing-medium);
		&.d30-70 {
			margin-left: calc(30% + $spacing-medium);
		}
		&.d34-66 {
			margin-left: calc(34% + $spacing-medium);
		}
	}
}

.errContainer {
	position: relative;
	.errTooltip {
		//display: none;
		position: absolute;
		top: -0.6rem;
		right: -$spacing-small;
		background: white;
		transform: translateY(-100%);
		width: 12rem;
		white-space: break-spaces;
		padding: 0.4rem 0.6rem;
		border-radius: 0.4rem;
		border: 1px solid rgba(0, 0, 0, 0.13);
		box-shadow: rgba(0, 0, 0, 0.13) 2px 3px 10px 0px;
		.errorContainer {
			color: initial;
		}
	}
	&:hover .errTooltip {
		display: block;
	}
}
